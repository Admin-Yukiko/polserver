// @ts-check

const { PolObject } = process._linkedBinding("pol");

{{#each .}}class {{$.name}}{{#if parent.[0]}} extends {{parent.[0]}}{{else}} extends PolObject{{/if}} {
 constructor(extObj, { get_member, set_member, call_method }) {
      super(...arguments);
      Object.defineProperties(this, {
{{#each memberProps}}            "{{@key}}": { {{#if ro}}set() {}{{else}}set(v) { set_member(this, {{#exists id}}{{id}}{{else}}"{{@key}}"{{/exists}}, v); }{{/if}}, get() { return get_member(this, {{#exists id}}{{id}}{{else}}"{{@key}}"{{/exists}}); } },
{{/each}}
      });
  {{#each prototypes}}    this.{{camelCase @key}} = function() { return call_method(this, {{#exists id}}{{id}}{{else}}"{{@key}}"{{/exists}}, ...arguments); };
{{/each}}
  }

};

{{/each}}
  
module.exports = {
{{#each .}}    {{$.name}},
{{/each}} 
};
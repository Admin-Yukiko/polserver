const ExtObjSymbol = Symbol("ExtObj");

{{#each .}}class {{$.name}}{{#if parent.[0]}} extends {{parent.[0]}}{{/if}} {
  constructor(extObj) { 
      Object.defineProperties(this, {
            [ExtObjSymbol]: { writable: false, enumerable: false, value: extObj },
{{#each memberProps}}            "{{@key}}": { {{#if ro}}set() {}{{else}}set() { this[ExtObjSymbol].set_member({{#exists id}}{{id}}{{else}}"{{@key}}"{{/exists}}); }{{/if}}, get() { this[ExtObjSymbol].get_member({{#exists id}}{{id}}{{else}}"{{@key}}"{{/exists}}); } },
{{/each}}
      });
  }
{{#each prototypes}}  {{camelCase @key}}() { return this[ExtObjSymbol].call_method({{#exists id}}{{id}}{{else}}"{{@key}}"{{/exists}}, ...arguments); }
{{/each}}
};

{{/each}}
  

module.exports = {
{{#each .}}    {{$.name}},
{{/each}} 
};